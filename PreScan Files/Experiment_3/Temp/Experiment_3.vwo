vismanager.setSimulationFrequency(100)
vismanager.initDefaultLight(True)
light_root.sun.setDirection(-1, 1, -1)
light_root.sun.setAmbient(0.5882353, 0.5882353, 0.5882353, 1)
light_root.sun.setDiffuse(0.4117647, 0.4117647, 0.4117647, 1)
light_root.sun.setSpecular(0.5882353, 0.5882353, 0.5882353, 1)
light_root.setGlobalAmbientColor(0, 0, 0, 1.0)
light_root.sun.setIntensity(1)
light_root.sun.setShadowMode(visnodes.VisLight.ShadowMode.SHADOW_ON)

light_root.setShadowsContrast(0.7, 0.3)
light_root.setMinimumWorldBBox(True, -5.821503, -6.255951, 0, 262.9785, 262.544, 0)
light_root.setShadowSoftnessWidth(0.00075);light_root.setShadowJitteringScale(32)
light_root.sun.setShadowTextureSize(4096)

skybox_visual_world = visnodes.VisBackground.createSkybox(r"skybox_visual_world", r"SKY_Air", 1)
mat = visnodes.VisMaterial_createAndSetVisMaterial(skybox_visual_world);mat.setColors(1.176471, 1.176471, 1.176471, 1.0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
skybox_visual_world_bottom = visnodes.VisTerrain.createTerrain(r"skybox_visual_world_bottom", 1000, 1000, r"Air_terrain.png", 20000, 20000, -50, True)
mat = visnodes.VisMaterial_createAndSetVisMaterial(skybox_visual_world_bottom);mat.setColors(0.7843137, 0.7843137, 0.7843137, 1.0, 0.7843137, 0.7843137, 0.7843137, 1.0, 0, 0, 0, 1.0, 0, 0, 0, 1)
skybox_visual_world_container = visnodes.VisTransform.createTransformNode(r"skybox_visual_world_container")
skybox_visual_world_container.setNodeMask(8, False)
skybox_visual_world_container.addChild(skybox_visual_world)
non_shader_scene.addChild(skybox_visual_world_container)

terrain_visual_world = visnodes.VisTerrain.createTerrain(r"terrain_visual_world", 1180, 1025, "Air_terrain.png", 1180, 1025)
mat = visnodes.VisMaterial_createAndSetVisMaterial(terrain_visual_world);mat.setColors(0.7843137, 0.7843137, 0.7843137, 1, 0.7843137, 0.7843137, 0.7843137, 1, 0, 0, 0, 1, 0, 0, 0, 1)
mat = visnodes.VisMaterial("mat");mat.setShininess(0);mat.applyComponents(terrain_visual_world, mat.SHININESS, True)
terrain_visual_world_container = visnodes.VisTransform.createTransformNode(r"terrain_visual_world_container")
terrain_visual_world_container.setNodeMask(16, False)
terrain_visual_world_container.addChild(terrain_visual_world)
scene.addChild(terrain_visual_world_container)
terrain_visual_world_container.addChild(skybox_visual_world_bottom)
terrain_visual_world.setTranslation(122.6085205078125, 153.14749145507812, 0)

Audi_A8_1 = visnodes.VisTransform.load( r"Audi_A8_1", r"Audi_A8.psIve", False )
Audi_A8_1.setNodeMask(0xFFFFFFFF, True)
Audi_A8_1.setNodeMaskOnGeodes(70016)
scene.addChild(Audi_A8_1)
scene.Audi_A8_1.setTranslation(56.919357776641846, 151.23704528808616, 0)
scene.Audi_A8_1.setRotation(0, 1, 0, 0)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.5411765, 0.2705882, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Audi_A8_1.IndicatorsL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.5411765, 0.2705882, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Audi_A8_1.IndicatorsR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Audi_A8_1.FogLightRL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Audi_A8_1.FogLightRR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Audi_A8_1.FogLightFL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Audi_A8_1.FogLightFR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Audi_A8_1.MainLightRL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Audi_A8_1.MainLightRR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.1019608, 0.1019608, 0.1019608, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Audi_A8_1.MainLightFL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.1019608, 0.1019608, 0.1019608, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Audi_A8_1.MainLightFR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Audi_A8_1.BrakeLightL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Audi_A8_1.BrakeLightR, mat.ALL_RGB, True)

BMW_Z3_1 = visnodes.VisTransform.load( r"BMW_Z3_1", r"BMW_Z3.psIve", False )
BMW_Z3_1.setNodeMask(0xFFFFFFFF, True)
BMW_Z3_1.setNodeMaskOnGeodes(70016)
scene.addChild(BMW_Z3_1)
scene.BMW_Z3_1.setTranslation(199.12646424770355, 155.00022888169045, 0)
scene.BMW_Z3_1.setRotation(3.1415926534828138, 0, 0, 1)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.5411765, 0.2705882, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.IndicatorsL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.5411765, 0.2705882, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.IndicatorsR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.FogLightRL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.FogLightRR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.FogLightFL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.FogLightFR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.MainLightRL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.MainLightRR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.1019608, 0.1019608, 0.1019608, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.MainLightFL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.1019608, 0.1019608, 0.1019608, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.MainLightFR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.BrakeLightL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.BrakeLightM, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.BrakeLightR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.BackupLightL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.BMW_Z3_1.BackupLightR, mat.ALL_RGB, True)

Actros_2541_1 = visnodes.VisTransform.load( r"Actros_2541_1", r"MercedesBenz_Actros_2541_L_6x2.psIve", False )
Actros_2541_1.setNodeMask(0xFFFFFFFF, True)
Actros_2541_1.setNodeMaskOnGeodes(70016)
scene.addChild(Actros_2541_1)
scene.Actros_2541_1.setTranslation(148.25819396972656, 158.37855529785156, 0)
scene.Actros_2541_1.setRotation(3.1415926535897931, 0, 0, 1)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.5411765, 0.2705882, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.IndicatorsL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.5411765, 0.2705882, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.IndicatorsR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.FogLightRL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.FogLightRR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.FogLightFL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.FogLightFR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.MainLightRL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.MainLightRR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.1019608, 0.1019608, 0.1019608, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.MainLightFL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.1019608, 0.1019608, 0.1019608, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.MainLightFR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.BrakeLightL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.BrakeLightR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.BackupLightL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Actros_2541_1.BackupLightR, mat.ALL_RGB, True)

Nissan_Cabstar_1 = visnodes.VisTransform.load( r"Nissan_Cabstar_1", r"Nissan_Cabstar.psIve", False )
Nissan_Cabstar_1.setNodeMask(0xFFFFFFFF, True)
Nissan_Cabstar_1.setNodeMaskOnGeodes(70016)
scene.addChild(Nissan_Cabstar_1)
scene.Nissan_Cabstar_1.setTranslation(120.70279998779297, 144.38333129882813, 0)
scene.Nissan_Cabstar_1.setRotation(0, 1, 0, 0)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.5411765, 0.2705882, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Nissan_Cabstar_1.IndicatorsL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.5411765, 0.2705882, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Nissan_Cabstar_1.IndicatorsR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Nissan_Cabstar_1.FogLightRL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Nissan_Cabstar_1.FogLightRR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Nissan_Cabstar_1.FogLightFL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Nissan_Cabstar_1.FogLightFR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Nissan_Cabstar_1.MainLightRL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Nissan_Cabstar_1.MainLightRR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.1019608, 0.1019608, 0.1019608, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Nissan_Cabstar_1.MainLightFL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.1019608, 0.1019608, 0.1019608, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Nissan_Cabstar_1.MainLightFR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Nissan_Cabstar_1.BrakeLightL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Nissan_Cabstar_1.BrakeLightR, mat.ALL_RGB, True)

Male_RegularAni_1 = visnodes.VisTransform.load( r"Male_RegularAni_1", r"Male_Regular\Male_regular.osgb", False )
Male_RegularAni_1.setNodeMask(0xFFFFFFFF, True)
Male_RegularAni_1.setNodeMaskOnGeodes(70016)
light_root.setupGPUSkinningClassic(Male_RegularAni_1, False)
scene.addChild(Male_RegularAni_1)
scene.getAnimNodeChild("Male_RegularAni_1")
scene.Male_RegularAni_1.stopAnimGroup()
scene.Male_RegularAni_1.setTranslation(126.19412994384766, 145.37350463867187, 0)
scene.Male_RegularAni_1.setRotation(1.5707963268062719, 0, 0, 1)
texture = visnodes.VisTexture_loadAlphaMap(r"UV_Male_Regular_01_grey.JPG")
texture.recolorPartially(0.6470588, 0.1647059, 0.1647059, 0, 1320, 1686, 2048)
texture.recolorPartially(0, 0, 1, 1162, 458, 2048, 948)
texture.recolorPartially(0, 0, 0, 1686, 1468, 2036, 1929)
texture.applyTexture(scene.Male_RegularAni_1)
scene.Male_RegularAni_1.setAnimTime(1, 0)

Grass_1 = visnodes.VisTransform.createTransformNode(r"Grass_1")
Grass_1.setNodeMaskOnGeodes(70016)
scene.addChild(Grass_1)
scene.Grass_1.setTranslation(128.57851791381833, 128.14406585693359, 0)
scene.Grass_1.setRotation(0, 1, 0, 0)
Grass_1_ColorBufferWriter = visnodes.VisPlane.createPlane(r"Grass_1_ColorBufferWriter", -128, 128, -128, 128)
scene.Grass_1.addChild(Grass_1_ColorBufferWriter)
Grass_1_ColorBufferWriter.setTexture(r"Grass.png", 0.00390625, 0.00390625)
Grass_1_ColorBufferWriter.enableFoundationMode(0)
visnodes.VisTexture_enableFullTransparency(Grass_1_ColorBufferWriter, 0.5)
Grass_1_DepthBufferWriter = visnodes.VisPlane.createPlane(r"Grass_1_DepthBufferWriter", -128, 128, -128, 128)
scene.Grass_1.addChild(Grass_1_DepthBufferWriter)
Grass_1_DepthBufferWriter.setTexture(r"Grass.png", 0.00390625, 0.00390625)
Grass_1_DepthBufferWriter.depthBufferOnly(0)
visnodes.VisTexture_enableFullTransparency(Grass_1_DepthBufferWriter, 0.5)
mat = visnodes.VisMaterial("mat");mat.setColors(0.7843137, 0.7843137, 0.7843137, 1.0, 0.7843137, 0.7843137, 0.7843137, 1.0, 0, 0, 0, 1.0, 0.0, 0.0, 0.0, 1.0);mat.applyComponents(scene.Grass_1, mat.ALL_RGB, False)
mat = visnodes.VisMaterial("mat");mat.setShininess(1);mat.applyComponents(Grass_1, mat.SHININESS, False)

world = visnodes.VisTransform.load("world", "world.osgb", False)
scene.addChild(world)
light_root.generateShaderFromTemplate(True)
